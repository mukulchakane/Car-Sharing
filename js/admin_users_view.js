// Generated by CoffeeScript 1.4.0
var users_view_Controller,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

users_view_Controller = users_view_Controller || {};

jQuery(function() {
  var users_view, users_view_Controller;
  users_view_Controller = (function() {

    function users_view_Controller() {
      this.load_users_view = __bind(this.load_users_view, this);

      this.load = __bind(this.load, this);

      this.ajax = __bind(this.ajax, this);
      this.status = $('#users_view_status');
      this.statusMsg = $('#users_view_msg');
      this.statusLoader = $('#users_view_loader');
      this.users_view = $('#users_view');
      setTimeout(this.ajax, 1000);
    }

    users_view_Controller.prototype.ajax = function() {
      var _this = this;
      return $.ajax({
        url: '/admin_users_view_ajax.php',
        type: 'GET',
        data: {
          'data': JSON.stringify({})
        },
        success: this.load,
        complete: function(xhr, status) {
          if (status !== 'success') {
            _this.statusMsg.html("<em>" + xhr.status + ": " + xhr.statusText + "</em>");
            return _this.statusLoader.fadeOut(500, function() {
              return _this.statusMsg.fadeIn(500);
            });
          }
        }
      });
    };

    users_view_Controller.prototype.load = function(json) {
      var data, users_view,
        _this = this;
      data = JSON.parse(json);
      console.log(data);
      users_view = data.users_view;
      if (users_view.length === 0) {
        return this.statusLoader.fadeOut(500, function() {
          return _this.statusMsg.fadeIn(500);
        });
      } else {
        return this.users_view.fadeOut(500, function() {
          _this.status.hide();
          return _this.load_users_view(users_view);
        });
      }
    };

    users_view_Controller.prototype.load_users_view = function(users_viewData) {
      var users_view, users_viewData, _i, _len;
      for (_i = 0, _len = users_viewData.length; _i < _len; _i++) {
        users_viewData = users_viewData[_i];
        console.log(users_view);
        users_view = new users_view(users_viewData);
        this.users_view.append(users_view.render());
      }
      this.users_view.fadeIn(500);
      return $('.dropdown_toggle').dropdown();
    };

    return users_view_Controller;

  })();
  users_view = (function() {

    function users_view(data) {
      this.data = data;
      this.data.departure_string = (new Date(parseInt(this.data.departure_time) * 1000)).toLocaleString();
      this.template = _.template($('#users_view_row_template').html());
    }

    users_view.prototype.render = function() {
      return this.template(this.data);
    };

    return users_view;

  })();
  return users_view_Controller = new users_view_Controller();
});
