// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['components/input/text-input'], function(TextInput) {
  var NumberInput;
  return NumberInput = (function(_super) {

    __extends(NumberInput, _super);

    function NumberInput() {
      this.getValue = __bind(this.getValue, this);
      return NumberInput.__super__.constructor.apply(this, arguments);
    }

    NumberInput.prototype.getValue = function() {
      var inputString, max, min, val;
      inputString = this.input.val().trim();
      if (this.required && !inputString) {
        this.setError('Required field.');
        return null;
      }
      min = parseInt(this.input.attr('min'));
      max = parseInt(this.input.attr('max'));
      val = parseInt(this.input.val());
      if (!(min <= val && val <= max)) {
        this.setError('Not within valid range.');
        return null;
      }
      return val;
    };

    return NumberInput;

  })(TextInput);
});
